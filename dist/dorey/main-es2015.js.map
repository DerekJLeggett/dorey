{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/auto/auto.component.html","webpack:///./src/app/covid/covid.component.html","webpack:///./src/app/derek/derek.component.html","webpack:///./src/app/dunkin/dunkin.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/library/library.component.html","webpack:///./src/app/lindsey/lindsey.component.html","webpack:///./src/app/lori/lori.component.html","webpack:///./src/app/marvel/marvel.component.html","webpack:///./src/app/nps/nps.component.html","webpack:///./src/app/performance/performance.component.html","webpack:///./src/app/places/places.component.html","webpack:///./src/app/recreation/recreation.component.html","webpack:///./src/app/ships/ships.component.html","webpack:///./src/app/snap/snap.component.html","webpack:///./src/app/swapi/swapi.component.html","webpack:///./src/app/world/world.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auto/auto.component.css","webpack:///./src/app/auto/auto.component.ts","webpack:///./src/app/auto/auto.service.ts","webpack:///./src/app/covid/covid.component.css","webpack:///./src/app/covid/covid.component.ts","webpack:///./src/app/covid/covid.service.ts","webpack:///./src/app/derek/derek.component.css","webpack:///./src/app/derek/derek.component.ts","webpack:///./src/app/derek/derek.service.ts","webpack:///./src/app/dunkin/dunkin.component.css","webpack:///./src/app/dunkin/dunkin.component.ts","webpack:///./src/app/dunkin/dunkin.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/library/library.component.css","webpack:///./src/app/library/library.component.ts","webpack:///./src/app/lindsey/lindsey.component.css","webpack:///./src/app/lindsey/lindsey.component.ts","webpack:///./src/app/lori/lori.component.css","webpack:///./src/app/lori/lori.component.ts","webpack:///./src/app/lori/lori.service.ts","webpack:///./src/app/marvel/marvel.component.css","webpack:///./src/app/marvel/marvel.component.ts","webpack:///./src/app/marvel/marvel.service.ts","webpack:///./src/app/nps/nps.component.css","webpack:///./src/app/nps/nps.component.ts","webpack:///./src/app/nps/nps.service.ts","webpack:///./src/app/performance/performance.component.css","webpack:///./src/app/performance/performance.component.ts","webpack:///./src/app/performance/performance.service.ts","webpack:///./src/app/places/places.component.css","webpack:///./src/app/places/places.component.ts","webpack:///./src/app/places/places.service.ts","webpack:///./src/app/recreation/recreation.component.css","webpack:///./src/app/recreation/recreation.component.ts","webpack:///./src/app/recreation/recreation.service.ts","webpack:///./src/app/shared/state.service.ts","webpack:///./src/app/ships/ships.component.css","webpack:///./src/app/ships/ships.component.ts","webpack:///./src/app/ships/ships.service.ts","webpack:///./src/app/snap/snap.component.css","webpack:///./src/app/snap/snap.component.ts","webpack:///./src/app/swapi/swapi.component.css","webpack:///./src/app/swapi/swapi.component.ts","webpack:///./src/app/swapi/swapi.service.ts","webpack:///./src/app/world/world.component.css","webpack:///./src/app/world/world.component.ts","webpack:///./src/app/world/world.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<nav>\\n  <div class=\\\"nav nav-tabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n    <a class=\\\"nav-item nav-link active h4\\\" id=\\\"nav-home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#\\\" role=\\\"tab\\\"\\n      aria-controls=\\\"nav-home\\\" aria-selected=\\\"true\\\" routerLink=\\\"home\\\">Home</a>\\n    <a class=\\\"nav-item nav-link h4\\\" id=\\\"nav-lori-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#\\\" role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\"\\n      aria-selected=\\\"false\\\" routerLink=\\\"lori\\\">Lori</a>\\n    <a class=\\\"nav-item nav-link h4\\\" id=\\\"nav-lindsey-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#\\\" role=\\\"tab\\\"\\n      aria-controls=\\\"nav-contact\\\" aria-selected=\\\"false\\\" routerLink=\\\"lindsey\\\">Lindsey</a>\\n    <a class=\\\"nav-item nav-link h4\\\" id=\\\"nav-derek-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#\\\" role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\"\\n      aria-selected=\\\"false\\\" routerLink=\\\"derek\\\">Derek</a>\\n    <a class=\\\"nav-item nav-link h4\\\" id=\\\"nav-covid-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#\\\" role=\\\"tab\\\" aria-controls=\\\"nav-profile\\\"\\n      aria-selected=\\\"false\\\" routerLink=\\\"covid\\\">Covid-19</a>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n<footer class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12 text-center\\\">\\n      <a href=\\\"#\\\">\\n        <img src=\\\"/assets/images/mailbox.gif\\\" alt=\\\"mailbox\\\" />\\n      </a>\\n      <br>\\n      <a href=\\\"#\\\">\\n        <img src=\\\"/assets/images/0342.gif\\\" alt=\\\"mailbox\\\" />\\n      </a>\\n      <h3 class=\\\"text-center\\\">Created by Lori Leggett - 1/13/01</h3>\\n    </div>\\n  </div>\\n</footer>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"typeSelect\\\" class=\\\"sr-only\\\">Select a vehicle type</label>\\n          <select class=\\\"custom-select\\\" id=\\\"typeSelect\\\" (change)=\\\"getMakesByType($event.target.value)\\\">\\n            <option selected class=\\\"text-center\\\">Select a vehicle type</option>\\n            <option *ngFor=\\\"let type of types\\\" class=\\\"text-center\\\" value=\\\"{{type.type}}\\\">\\n              {{type.type}}\\n            </option>\\n          </select>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"makeSelect\\\" class=\\\"sr-only\\\">Select a manufacturer</label>\\n          <select class=\\\"custom-select\\\" id=\\\"makeSelect\\\" (change)=\\\"getModelsByMakeId($event.target.value)\\\">\\n            <option selected class=\\\"text-center\\\">Select a manufacturer</option>\\n            <option *ngFor=\\\"let make of makesByType\\\" class=\\\"text-center\\\" value=\\\"{{make.MakeId}}\\\">\\n              {{make.MakeName}}\\n            </option>\\n          </select>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h4 class=\\\"text-center\\\">Models</h4>\\n      <div *ngFor=\\\"let model of models\\\">\\n        {{model.Model_Name}}\\n      </div>\\n    </div>\\n  </div>\\n  <a href=\\\"https://vpic.nhtsa.dot.gov/api/Home\\\" target=\\\"_blank\\\">Data Provided by Vehicle API</a>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row no-gutters\\\" *ngFor=\\\"let covidCount of covidCounts\\\">\\n        <div class=\\\"col-1\\\">\\n            <img class=\\\"img-fluid svg\\\" title=\\\"{{covidCount.Country_code}}\\\"\\n                src=\\\"assets/images/flags/svg/{{covidCount.Country_code | lowercase}}.svg\\\">\\n        </div>\\n        <div class=\\\"col-11\\\">\\n            <div class=\\\"progress\\\" style=\\\"height: 50px\\\">\\n                <div class=\\\" progress-bar bg-danger\\\" role=\\\"progressbar\\\"\\n                    [style.width.%]=\\\"((covidCount.Cumulative_deaths/covidCounts[0].Cumulative_cases)*100)\\\"\\n                    aria-valuenow=\\\"((covidCount.Cumulative_deaths/covidCounts[0].Cumulative_cases)*100)\\\"\\n                    aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n                    {{covidCount.Cumulative_deaths | number}}</div>\\n                <div class=\\\"progress-bar bg-warning\\\" role=\\\"progressbar\\\"\\n                    [style.width.%]=\\\"(((covidCount.Cumulative_cases - covidCount.Cumulative_deaths)/covidCounts[0].Cumulative_cases)*100)\\\"\\n                    aria-valuenow=\\\"(((covidCount.Cumulative_cases - covidCount.Cumulative_deaths)/covidCounts[0].Cumulative_cases)*100)\\\"\\n                    aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n                    {{covidCount.Cumulative_cases | number}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <h1 class=\\\"text-center\\\">Derek's Project Page!</h1>\\n      <h2 class=\\\"text-center\\\">Serving up delicious, byte size chunks of functionality!</h2>\\n      <div class=\\\"list-group\\\">\\n        <a routerLink=\\\"{{link.url}}\\\" href=\\\"#\\\"\\n          class=\\\"list-group-item list-group-item-action list-group-item-primary text-center\\\"\\n          *ngFor=\\\"let link of dereksLinks\\\">\\n          <img class=\\\"img-fluid svg\\\" src=\\\"{{link.imagePath}}\\\" />\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <label for=\\\"stateSelect\\\" class=\\\"sr-only\\\">Select a State</label>\\n            <select class=\\\"custom-select\\\" id=\\\"stateSelect\\\" (change)=\\\"getDunkinByState($event.target.value)\\\">\\n                <option selected class=\\\"text-center\\\">Select a State</option>\\n                <option class=\\\"text-center\\\" *ngFor=\\\"let state of states\\\" class=\\\"text-center\\\" value=\\\"{{state.code}}\\\">\\n                    {{state.name}}\\n                </option>\\n            </select>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <ul class=\\\"list-unstyled\\\">\\n                <li>\\n                    <ul>\\n                        <li *ngFor=\\\"let dunkin of dunkins\\\">{{dunkin.address}}\\n\\n                        </li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <img class=\\\"img-fluid\\\" src=\\\"/assets/images/dlwedding.jpg\\\"\\n        alt=\\\"Derek and Lori Leggett's wedding picture from June 6th, 1998\\\">\\n    </div>\\n    <div class=\\\"col-lg-8 story\\\">\\n      <p class=\\\"h1\\\">\\n        Hi, our names are Derek and Lori Leggett. We were married on June 6, 1998 and live in Peoria, Arizona.\\n        Lori is a 5th grade teacher. Derek is the computer guy! We are expecting our first child around May 5,\\n        2002. Thank you for visting our web page. We\\n        hope you enjoy it!\\n      </p>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<p>\\n  library works!\\n</p>\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      <h1 class=\\\"text-center\\\">Lori's Teacher Resource Page</h1>\\n      <h2 class=\\\"text-center\\\">Looking for new ideas and lessons? Visit...</h2>\\n      <div class=\\\"list-group\\\">\\n\\n        <a target=\\\"_blank\\\" href=\\\"{{link.url}}\\\" class=\\\"list-group-item list-group-item-action list-group-item-primary\\\"\\n          *ngFor=\\\"let link of lorisLinks\\\">\\n\\n          <h4 class=\\\"text-center\\\"><img src=\\\"/assets/images/nn0518.gif\\\" />{{link.linkText}}</h4>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <label for=\\\"characterSelect\\\" class=\\\"sr-only\\\">Select a Character</label>\\n            <select class=\\\"custom-select\\\" id=\\\"characterSelect\\\" (change)=\\\"getCharacterById($event.target.value)\\\">\\n                <option selected class=\\\"text-center\\\">Select a Character</option>\\n                <option class=\\\"text-center\\\" *ngFor=\\\"let character of characters\\\" class=\\\"text-center\\\"\\n                    value=\\\"{{character.id}}\\\">\\n                    {{character.name}}\\n                </option>\\n            </select>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div *ngFor=\\\"let characterBy of characterById\\\" class=\\\"text-center\\\">\\n                <h3>{{characterBy.name}}</h3>\\n                <h4>{{characterBy.description}}</h4>\\n                <img class=\\\"img-fluid\\\" title=\\\"{{characterBy.name}}\\\"\\n                    src=\\\"{{characterBy.thumbnail.path}}.{{characterBy.thumbnail.extension}}\\\">\\n                <h4><u>Comics</u></h4>\\n                <div *ngFor=\\\"let comic of characterBy.comics.items\\\">\\n                    {{comic.name}}\\n                </div>\\n                <h4><u>Stories</u></h4>\\n                <div *ngFor=\\\"let story of characterBy.stories.items\\\">\\n                    {{story.name}}\\n                </div>\\n            </div>\\n            <a class=\\\"text-center\\\" href=\\\"http://marvel.com\\\">Data provided by Marvel. © 2019 MARVEL</a>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <label for=\\\"stateSelect\\\" class=\\\"sr-only\\\">Select a State</label>\\n            <select class=\\\"custom-select\\\" id=\\\"stateSelect\\\" (change)=\\\"getParks($event.target.value)\\\">\\n                <option selected class=\\\"text-center\\\">Select a State</option>\\n                <option class=\\\"text-center\\\" *ngFor=\\\"let state of states\\\" class=\\\"text-center\\\" value=\\\"{{state.code}}\\\">\\n                    {{state.name}}\\n                </option>\\n            </select>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"text-center\\\" *ngFor=\\\"let park of parks\\\">\\n                <h2><a target=\\\"_blank\\\" href=\\\"{{park.url}}\\\">{{park.fullName}}</a></h2><br>\\n                <img *ngFor=\\\"let image of park.images\\\" class=\\\"img-fluid img-thumbnail\\\" src=\\\"{{image.url}}\\\"\\n                    alt=\\\"{{image.altText}}\\\"><br>\\n                <h3>{{park.description}}</h3><br>\\n                <h4><a target=\\\"_blank\\\" href=\\\"{{park.directionsUrl}}\\\">Get Directions</a></h4><br>\\n                <h3>Weather Info: </h3><br>\\n                <h4>{{park.weatherInfo}}</h4>\\n            </div>\\n        </div>\\n    </div>\\n    <a href=\\\"https://www.nps.gov/subjects/developer/index.htm\\\" target=\\\"_blank\\\">Data provided by the US National Park\\n        Service</a>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h2 class=\\\"text-center\\\">SUPER(Single User Performance)</h2>\\n      <p class=\\\"text-center\\\">Performance metrics were obtained by opening clean(no cache) browser, navigating to the\\n        specified url\\n        , waiting for the page to load, then collecting metrics reported by the browser.\\n        Blue bar is Network + Server Processing time.\\n        Red bar is Redirect time.\\n        Yellow bar is Page Load/Browser Rendering time.\\n        All values are in milliseconds.\\n      </p>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <label for=\\\"industrySelect\\\" class=\\\"sr-only\\\">Select an Industry</label>\\n      <select class=\\\"custom-select\\\" id=\\\"makeSelect\\\" (change)=\\\"getTimingsByIndustryCode($event.target.value)\\\">\\n        <option selected class=\\\"text-center\\\">Select an Industry</option>\\n        <option *ngFor=\\\"let industry of industries\\\" class=\\\"text-center\\\" value=\\\"{{industry.id}}\\\">\\n          {{industry.name}}\\n        </option>\\n      </select>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\" *ngFor=\\\"let timing of timings\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"progress\\\" style=\\\"height: 30px;\\\">\\n        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\"\\n          [style.width.%]=\\\"((timing.networkLatency/timings[0].completeTime)*100)\\\"\\n          aria-valuenow=\\\"((timing.networkLatency/timings[0].completeTime)*100)\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n          {{timing.networkLatency}}</div>\\n        <div class=\\\"progress-bar bg-danger\\\" role=\\\"progressbar\\\"\\n          [style.width.%]=\\\"((timing.redirectTime/timings[0].completeTime)*100)\\\"\\n          aria-valuenow=\\\"((timing.redirectTime/timings[0].completeTime)*100)\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n          {{timing.redirectTime}}</div>\\n        <div class=\\\"progress-bar bg-warning\\\" role=\\\"progressbar\\\"\\n          [style.width.%]=\\\"((timing.pageLoadTime/timings[0].completeTime)*100)\\\"\\n          aria-valuenow=\\\"((timing.pageLoadTime/timings[0].completeTime)*100)\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n          <a class=\\\"h4\\\" href=\\\"https://{{timing.url}}\\\" target=\\\"_blank\\\">{{timing.pageLoadTime}} - {{timing.url}}</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\" *ngFor=\\\"let place of places\\\">\\n        <div class=\\\"col\\\">\\n            <h3>{{place.distance | number}}mi. - <a target=\\\"_blank\\\"\\n                    href=\\\"https://www.google.com/maps/search/?api=1&query={{place.latitude}},{{place.longitude}}\\\"><img\\n                        *ngIf=\\\"place.type=='Dunkin Donuts'\\\" class=\\\"img-fluid svg\\\" src=\\\"assets/images/Dunkin_Donuts.svg\\\"\\n                        alt=\\\"Dunkin Donuts logo\\\">\\n                    <img *ngIf=\\\"place.type=='Library'\\\" class=\\\"img-fluid svg\\\" src=\\\"assets/images/Library.svg\\\"\\n                        alt=\\\"Dunkin Donuts logo\\\">\\n                    <img *ngIf=\\\"place.type=='Snap'\\\" class=\\\"img-fluid svg\\\" src=\\\"assets/images/SNAP.svg\\\"\\n                        alt=\\\"Dunkin Donuts logo\\\"></a>\\n            </h3>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <label for=\\\"stateSelect\\\" class=\\\"sr-only\\\">Select a State</label>\\n            <select class=\\\"custom-select\\\" id=\\\"stateSelect\\\" (change)=\\\"getRecreationalAreas($event.target.value)\\\">\\n                <option selected class=\\\"text-center\\\">Select a State</option>\\n                <option class=\\\"text-center\\\" *ngFor=\\\"let state of states\\\" class=\\\"text-center\\\" value=\\\"{{state.code}}\\\">\\n                    {{state.name}}\\n                </option>\\n            </select>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <ul class=\\\"list-unstyled\\\">\\n                <li>\\n                    <ul class=\\\"list-unstyled\\\">\\n                        <li *ngFor=\\\"let recArea of recreationalAreas\\\">\\n                            <h2><a target=\\\"_blank\\\" href=\\\"{{recArea.RecAreaMapURL}}\\\">{{recArea.RecAreaName}}</a></h2><br>\\n                            <h3>{{recArea.RecAreaDescription}}</h3><br>\\n                        </li>\\n                    </ul>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n    <a target=\\\"_blank\\\" href=\\\"http://ridb.recreation.gov/\\\">Data Source</a>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <label for=\\\"shipTypeSelect\\\" class=\\\"sr-only\\\">Select a Ship Type</label>\\n            <select class=\\\"custom-select\\\" id=\\\"shipTypeSelect\\\" (change)=\\\"getShipsByType($event.target.value)\\\">\\n                <option selected class=\\\"text-center\\\">Select a Ship Type</option>\\n                <option class=\\\"text-center\\\" *ngFor=\\\"let type of shipTypes\\\" class=\\\"text-center\\\" value=\\\"{{type.Code}}\\\">\\n                    {{type.Code}} - {{type.Name}}\\n                </option>\\n            </select>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12 text-center\\\">\\n            <h2>Active Ships in the U.S. Navy</h2>\\n            <div *ngFor=\\\"let ship of ships\\\" (click)=\\\"selectShip(ship)\\\">\\n                <a target=\\\"_blank\\\" href=\\\"{{ship.DANFSLink}}\\\">{{ship.Name}}</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n      Aw' Snap!\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <form>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"filmSelect\\\" class=\\\"sr-only\\\">Select a Film</label>\\n                    <select class=\\\"custom-select\\\" id=\\\"filmSelect\\\" (change)=\\\"getDetails($event.target.value)\\\">\\n                        <option selected class=\\\"text-center\\\">Select a Film</option>\\n                        <option *ngFor=\\\"let film of films\\\" class=\\\"text-center\\\" value=\\\"{{film.episode_id}}\\\">\\n                            {{film.title}}\\n                        </option>\\n                    </select>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\" *ngIf=\\\"selectedFilm\\\">\\n            <div>\\n                <h2 id=\\\"title\\\">Episode: {{selectedFilm.episode_id}} - {{selectedFilm.title}} - Directed by:\\n                    {{selectedFilm.director}} - Produced by: {{selectedFilm.producer}} Released:\\n                    {{selectedFilm.release_date | date}}\\n                </h2>\\n                <p>{{selectedFilm.opening_crawl}}</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\" *ngIf=\\\"selectedFilm\\\">\\n            <h4 class=\\\"text-center\\\">Characters</h4>\\n            <div class=\\\"text-center\\\" *ngFor=\\\"let character of characters\\\" data-toggle=\\\"modal\\\"\\n                data-target=\\\"#characterModal\\\" (click)=\\\"characterSelected(character)\\\">{{character.name}}</div>\\n            <h4 class=\\\"text-center\\\">Planets</h4>\\n            <div class=\\\"text-center\\\" *ngFor=\\\"let planet of planets\\\" data-toggle=\\\"modal\\\" data-target=\\\"#planetModal\\\"\\n                (click)=\\\"planetSelected(planet)\\\">{{planet.name}}</div>\\n            <h4 class=\\\"text-center\\\">StarShips</h4>\\n            <div class=\\\"text-center\\\" *ngFor=\\\"let starship of starShips\\\" data-toggle=\\\"modal\\\" data-target=\\\"#starshipModal\\\"\\n                (click)=\\\"starShipSelected(starship)\\\">{{starship.name}}</div>\\n            <h4 class=\\\"text-center\\\">Vehicles</h4>\\n            <div class=\\\"text-center\\\" *ngFor=\\\"let vehicle of vehicles\\\" data-toggle=\\\"modal\\\" data-target=\\\"#vehicleModal\\\"\\n                (click)=\\\"vehicleSelected(vehicle)\\\">{{vehicle.name}}</div>\\n            <h4 class=\\\"text-center\\\">Species</h4>\\n            <div class=\\\"text-center\\\" *ngFor=\\\"let specie of species\\\" data-toggle=\\\"modal\\\" data-target=\\\"#specieModal\\\"\\n                (click)=\\\"specieSelected(specie)\\\">{{specie.name}}</div>\\n        </div>\\n    </div>\\n    <a href=\\\"https://swapi.dev/\\\" target=\\\"_blank\\\">Data provided by StarWars API</a>\\n</div>\\n\\n\\n<div class=\\\"container-fluid\\\">\\n\\n    <div class=\\\"modal\\\" id=\\\"characterModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModal-label\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\" id=\\\"characterModalClose\\\">&times;</span>\\n                    </button>\\n                    <h4 class=\\\"modal-title\\\" id=\\\"myModal-label\\\" *ngIf=\\\"selectedCharacter\\\">Character Details -\\n                        {{selectedCharacter.name}}</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <table class=\\\"table table-striped table-bordered table-hover table-condensed table-sm\\\">\\n                                <thead class=\\\"thead-dark\\\">\\n                                    <tr>\\n                                        <th>Name</th>\\n                                        <th>Height</th>\\n                                        <th>Weight</th>\\n                                        <th>Hair</th>\\n                                        <th>Skin</th>\\n                                        <th>Eye</th>\\n                                        <th>Birth</th>\\n                                        <th>Gender</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngIf=\\\"selectedCharacter\\\">\\n                                        <td>{{selectedCharacter.name | titlecase}}</td>\\n                                        <td>{{selectedCharacter.height}}</td>\\n                                        <td>{{selectedCharacter.mass}}</td>\\n                                        <td>{{selectedCharacter.hair_color | titlecase}}</td>\\n                                        <td>{{selectedCharacter.skin_color | titlecase}}</td>\\n                                        <td>{{selectedCharacter.eye_color | titlecase}}</td>\\n                                        <td>{{selectedCharacter.birth_year}}</td>\\n                                        <td>{{selectedCharacter.gender | titlecase}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                        id=\\\"characterModalClose\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal\\\" id=\\\"planetModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModal-label\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\" id=\\\"planetModalClose\\\">&times;</span>\\n                    </button>\\n                    <h4 class=\\\"modal-title\\\" id=\\\"myModal-label\\\" *ngIf=\\\"selectedPlanet\\\">Planet Details -\\n                        {{selectedPlanet.name}}</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <table class=\\\"table table-striped table-bordered table-hover table-condensed table-sm\\\">\\n                                <thead class=\\\"thead-dark\\\">\\n                                    <tr>\\n                                        <th>Name</th>\\n                                        <th>Rotation Period</th>\\n                                        <th>Orbital Period</th>\\n                                        <th>Diameter</th>\\n                                        <th>Climate</th>\\n                                        <th>Gravity</th>\\n                                        <th>Terrain</th>\\n                                        <th>Surface Water</th>\\n                                        <th>Population</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngIf=\\\"selectedPlanet\\\">\\n                                        <td>{{selectedPlanet.name}}</td>\\n                                        <td>{{selectedPlanet.rotation_period | number}}</td>\\n                                        <td>{{selectedPlanet.orbital_period | number}}</td>\\n                                        <td>{{selectedPlanet.diameter | number}}</td>\\n                                        <td>{{selectedPlanet.climate | titlecase}}</td>\\n                                        <td>{{selectedPlanet.gravity | titlecase}}</td>\\n                                        <td>{{selectedPlanet.terrain | titlecase}}</td>\\n                                        <td>{{selectedPlanet.surface_water | number}}</td>\\n                                        <td>{{selectedPlanet.population | number}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                        id=\\\"planetModalClose\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal\\\" id=\\\"starshipModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModal-label\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\" id=\\\"starshipModalClose\\\">&times;</span>\\n                    </button>\\n                    <h4 class=\\\"modal-title\\\" id=\\\"myModal-label\\\" *ngIf=\\\"selectedStarShip\\\">StarShip Details -\\n                        {{selectedStarShip.name}}</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <table class=\\\"table table-striped table-bordered table-hover table-condensed table-sm\\\">\\n                                <thead class=\\\"thead-dark\\\">\\n                                    <tr>\\n                                        <th>Name</th>\\n                                        <th>Model</th>\\n                                        <th>Manufacturer</th>\\n                                        <th>Cost</th>\\n                                        <th>Length</th>\\n                                        <th>Speed</th>\\n                                        <th>Crew</th>\\n                                        <th>Passengers</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngIf=\\\"selectedStarShip\\\">\\n                                        <td>{{selectedStarShip.name}}</td>\\n                                        <td>{{selectedStarShip.model | titlecase}}</td>\\n                                        <td>{{selectedStarShip.manufacturer | titlecase}}</td>\\n                                        <td>{{selectedStarShip.cost_in_credits | number}}</td>\\n                                        <td>{{selectedStarShip.length | number}}</td>\\n                                        <td>{{selectedStarShip.max_atmosphering_speed | number}}</td>\\n                                        <td>{{selectedStarShip.crew | number}}</td>\\n                                        <td>{{selectedStarShip.passengers | number}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                        id=\\\"starshipModalClose\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal\\\" id=\\\"vehicleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModal-label\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\" id=\\\"vehicleModalClose\\\">&times;</span>\\n                    </button>\\n                    <h4 class=\\\"modal-title\\\" id=\\\"myModal-label\\\" *ngIf=\\\"selectedVehicle\\\">Vehicle Details -\\n                        {{selectedVehicle.name}}</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <table class=\\\"table table-striped table-bordered table-hover table-condensed table-sm\\\">\\n                                <thead class=\\\"thead-dark\\\">\\n                                    <tr>\\n                                        <th>Name</th>\\n                                        <th>Model</th>\\n                                        <th>Manufacturer</th>\\n                                        <th>Cost</th>\\n                                        <th>Length</th>\\n                                        <th>Speed</th>\\n                                        <th>Crew</th>\\n                                        <th>Passengers</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngIf=\\\"selectedVehicle\\\">\\n                                        <td>{{selectedVehicle.name}}</td>\\n                                        <td>{{selectedVehicle.model | titlecase}}</td>\\n                                        <td>{{selectedVehicle.manufacturer | titlecase}}</td>\\n                                        <td>{{selectedVehicle.cost_in_credits | number}}</td>\\n                                        <td>{{selectedVehicle.length | number}}</td>\\n                                        <td>{{selectedVehicle.max_atmosphering_speed | number}}</td>\\n                                        <td>{{selectedVehicle.crew | number}}</td>\\n                                        <td>{{selectedVehicle.passengers | number}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                        id=\\\"vehicleModalClose\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"modal\\\" id=\\\"specieModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModal-label\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n                <div class=\\\"modal-header\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\" id=\\\"specieModalClose\\\">&times;</span>\\n                    </button>\\n                    <h4 class=\\\"modal-title\\\" id=\\\"myModal-label\\\" *ngIf=\\\"selectedSpecie\\\">Specie Details -\\n                        {{selectedSpecie.name}}</h4>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col\\\">\\n                            <table class=\\\"table table-striped table-bordered table-hover table-condensed table-sm\\\">\\n                                <thead class=\\\"thead-dark\\\">\\n                                    <tr>\\n                                        <th>Name</th>\\n                                        <th>Classification</th>\\n                                        <th>Designation</th>\\n                                        <th>Average Height</th>\\n                                        <th>Average Life Span</th>\\n                                        <th>Homeworld</th>\\n                                        <th>Language</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngIf=\\\"selectedSpecie\\\">\\n                                        <td>{{selectedSpecie.name}}</td>\\n                                        <td>{{selectedSpecie.classification | titlecase}}</td>\\n                                        <td>{{selectedSpecie.designation | titlecase}}</td>\\n                                        <td>{{selectedSpecie.average_height | number}}</td>\\n                                        <td>{{selectedSpecie.average_lifespan | number}}</td>\\n                                        <td>{{selectedSpecie.homeworld | titlecase}}</td>\\n                                        <td>{{selectedSpecie.language | titlecase}}</td>\\n                                    </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-footer\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\"\\n                        id=\\\"vehicleModalClose\\\">Close</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <form>\\n        <div class=\\\"form-group text-center\\\">\\n          <label for=\\\"countrySelect\\\" class=\\\"sr-only\\\">Select a Country</label>\\n          <select class=\\\"custom-select text-center\\\" id=\\\"countrySelect\\\"\\n            (change)=\\\"getStatesNestedCitiesByCountryCode($event.target.value)\\\">\\n            <option selected class=\\\"text-center\\\">Select a Country</option>\\n            <option *ngFor=\\\"let country of countries\\\" class=\\\"text-center\\\" value=\\\"{{country.Code}}\\\">\\n              {{country.Name}}\\n            </option>\\n          </select>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col text-center\\\" *ngIf=\\\"country\\\">\\n      <h3 id=\\\"countryName\\\" class=\\\"text-center\\\">{{country.Name}}</h3>\\n      <img class=\\\"img-fluid svg\\\" title=\\\"{{country.Name}}\\\"\\n        src=\\\"assets/images/flags/svg/{{country.Code2 | lowercase}}.svg\\\">\\n      <h4 class=\\\"text-center\\\"><u>Languages Spoken</u></h4>\\n      <div class=\\\"progress\\\" *ngFor=\\\"let language of country.Languages\\\">\\n        <div class=\\\"progress-bar bg-warning text-dark\\\" role=\\\"progressbar\\\" [style.width.%]=\\\"language.Percentage\\\"\\n          aria-valuenow=\\\"language.Percentage\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\"><strong>{{language.Language}} -\\n            {{language.Percentage}}%</strong></div>\\n      </div>\\n    </div>\\n  </div>\\n  <h4 *ngIf=\\\"country\\\" class=\\\"text-center\\\"><u>States</u></h4>\\n  <div class=\\\"row\\\" *ngFor=\\\"let state of states\\\">\\n    <div class=\\\"col text-center\\\">\\n      <h3 class=\\\"text-center\\\">{{state.State}}</h3>\\n      <img class=\\\"img-fluid text-center svg\\\" title=\\\"{{state.State}}\\\"\\n        src=\\\"assets/images/flags/svg/{{country.Code2 | lowercase}}/{{state.StateCode | lowercase}}.svg\\\">\\n      <h4 class=\\\"text-center\\\"><u>Population by City</u></h4>\\n      <div class=\\\"progress\\\" *ngFor=\\\"let city of state.Cities\\\">\\n        <div class=\\\"progress-bar bg-warning text-dark\\\" role=\\\"progressbar\\\"\\n          [style.width.%]=\\\"((city.Population/state.Cities[0].Population)*100)\\\"\\n          aria-valuenow=\\\"((city.Population/state.Cities[0].Population)*100)\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\">\\n          <strong>{{city.City}} -\\n            {{city.Population | number}}</strong></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoriComponent } from './lori/lori.component';\nimport { LindseyComponent } from './lindsey/lindsey.component';\nimport { DerekComponent } from './derek/derek.component';\nimport { WorldComponent } from './world/world.component';\nimport { SwapiComponent } from './swapi/swapi.component';\nimport { MarvelComponent } from './marvel/marvel.component';\nimport { ShipsComponent } from './ships/ships.component';\nimport { AutoComponent } from './auto/auto.component';\nimport { DunkinComponent } from './dunkin/dunkin.component';\nimport { NpsComponent } from './nps/nps.component';\nimport { RecreationComponent } from './recreation/recreation.component';\nimport { SnapComponent } from './snap/snap.component';\nimport { LibraryComponent } from './library/library.component';\nimport { PerformanceComponent } from './performance/performance.component';\nimport { CovidComponent } from './covid/covid.component';\nimport { PlacesComponent } from './places/places.component';\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'home', },\n  { path: 'home', component: HomeComponent },\n  { path: 'lori', component: LoriComponent },\n  { path: 'lindsey', component: LindseyComponent },\n  { path: 'derek', component: DerekComponent },\n  { path: 'world', component: WorldComponent },\n  { path: 'starwars', component: SwapiComponent },\n  { path: 'marvel', component: MarvelComponent },\n  { path: 'ships', component: ShipsComponent },\n  { path: 'auto', component: AutoComponent },\n  { path: 'dunkin', component: DunkinComponent },\n  { path: 'nps', component: NpsComponent },\n  { path: 'recreation', component: RecreationComponent },\n  { path: 'snap', component: SnapComponent },\n  { path: 'library', component: LibraryComponent },\n  { path: 'performance', component: PerformanceComponent },\n  { path: 'covid', component: CovidComponent },\n  { path: 'places', component: PlacesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'dorey';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { LoriComponent } from './lori/lori.component';\nimport { LindseyComponent } from './lindsey/lindsey.component';\nimport { DerekComponent } from './derek/derek.component';\nimport { HomeComponent } from './home/home.component';\nimport { WorldComponent } from './world/world.component';\nimport { SwapiComponent } from './swapi/swapi.component';\nimport { MarvelComponent } from './marvel/marvel.component';\nimport { ShipsComponent } from './ships/ships.component';\nimport { AutoComponent } from './auto/auto.component';\nimport { DunkinComponent } from './dunkin/dunkin.component';\nimport { NpsComponent } from './nps/nps.component';\nimport { RecreationComponent } from './recreation/recreation.component';\nimport { SnapComponent } from './snap/snap.component';\nimport { LibraryComponent } from './library/library.component';\nimport { PerformanceComponent } from './performance/performance.component';\nimport { CovidComponent } from './covid/covid.component';\nimport { PlacesComponent } from './places/places.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoriComponent,\n    LindseyComponent,\n    DerekComponent,\n    HomeComponent,\n    WorldComponent,\n    SwapiComponent,\n    MarvelComponent,\n    ShipsComponent,\n    AutoComponent,\n    DunkinComponent,\n    NpsComponent,\n    RecreationComponent,\n    SnapComponent,\n    LibraryComponent,\n    PerformanceComponent,\n    CovidComponent,\n    PlacesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dG8vYXV0by5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IAutoManufacturer, IAutoManufacturerDetails, IMake, IAutoType, IMakeByType, IModel } from './auto';\nimport { AutoService } from './auto.service';\n\n@Component({\n  selector: 'app-auto',\n  templateUrl: './auto.component.html',\n  styleUrls: ['./auto.component.css']\n})\nexport class AutoComponent implements OnInit {\n  autoManufacturers: IAutoManufacturer[];\n  manufacturerDetails: IAutoManufacturerDetails[];\n  makes: IMake[];\n  types: IAutoType[];\n  makesByType: IMakeByType[];\n  models: IModel[];\n  constructor(private autoService: AutoService) { }\n\n  ngOnInit() {\n    this.getVehicleTypes();\n  }\n  getVehicleTypes() {\n    this.autoService.getVehicleTypes()\n    .subscribe(response => this.types = response);\n  }\n\n  getMakesByType(type: string) {\n    this.autoService.getMakesByType(type)\n    .subscribe(response => this.makesByType = response);\n  }\n\n  getModelsByMakeId(makeId: string) {\n    this.autoService.getModelsByMakeId(makeId)\n    .subscribe(response => this.models = response);\n  }\n  getAutoManufacturers(): void {\n    this.autoService.getAllManufacturers()\n      .subscribe(autoManufacturer => this.autoManufacturers = autoManufacturer);\n  }\n  getManufacturerDetails(name: string) {\n    this.autoService.getManufacturerDetails(name)\n    .subscribe(details => this.manufacturerDetails = details);\n  }\n  getMakesByManufacturer(name: string) {\n    this.autoService.getMakesByManufacturer(name)\n    .subscribe(details => this.makes = details);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IAutoManufacturer, IAutoManufacturerDetails, IMake, IAutoType, IMakeByType, IModel } from './auto';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class AutoService {\n\n  constructor(private http: HttpClient) { }\n  getManufacturersURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/getallmanufacturers?format=json';\n  getManufacturerDetailsURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/getmanufacturerdetails/';\n  getMakeForManufacturerURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/getmakeformanufacturer/';\n  getMakeByTypeURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/';\n  getModelsByMakeIdURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeId/';\n  getAllManufacturers(): Observable<IAutoManufacturer[]> {\n    return this.http.get<IAutoManufacturer[]>(this.getManufacturersURL)\n      .pipe(\n        map(response => response['Results']),\n        catchError(this.handleError('getAllManufacturers', []))\n      );\n  }\n\n  getVehicleTypes(): Observable<IAutoType[]> {\n    return this.http.get<IAutoType[]>('assets/data/autoTypes.json')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getVehicleTypes', []))\n      );\n  }\n  getMakesByType(type: string): Observable<IMakeByType[]> {\n    return this.http.get<IMakeByType[]>(this.getMakeByTypeURL + type + '?format=json')\n      .pipe(\n        map(response => response['Results']),\n        catchError(this.handleError('getMakesByType', []))\n      );\n  }\n  getModelsByMakeId(makeId: string) {\n    return this.http.get<IModel[]>(this.getModelsByMakeIdURL + makeId + '?format=json')\n      .pipe(\n        map(response => response['Results']),\n        catchError(this.handleError('getModelsByMakeId', []))\n      );\n  }\n  getManufacturerDetails(name: string): Observable<IAutoManufacturerDetails[]> {\n    return this.http.get<IAutoManufacturerDetails[]>(this.getManufacturerDetailsURL + name + '?format=json')\n      .pipe(\n        map(response => response['Results']),\n        catchError(this.handleError('getManufacturerDetails', []))\n      );\n  }\n\n  getMakesByManufacturer(name: string): Observable<IMake[]> {\n    return this.http.get<IMake[]>(this.getMakeForManufacturerURL + name + '?format=json')\n      .pipe(\n        map(response => response['Results']),\n        catchError(this.handleError('getMakesByManufacturer', []))\n      );\n  }\n\n  decodeVIN() {\n\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \".svg {\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY292aWQvY292aWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY292aWQvY292aWQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdmcge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ICovidCounts } from './covid';\nimport { CovidService } from './covid.service';\n\n@Component({\n  selector: 'app-covid',\n  templateUrl: './covid.component.html',\n  styleUrls: ['./covid.component.css']\n})\n\nexport class CovidComponent implements OnInit {\n\n  covidCounts: ICovidCounts[] = [];\n  constructor(private covidService: CovidService) { }\n\n  ngOnInit() {\n    this.getCovidCounts();\n  }\n\n  getCovidCounts() {\n    this.covidService.getCovidCounts()\n      .subscribe(response => this.covidCounts = response);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ICovidCounts } from './covid';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CovidService {\n\n  constructor(private http: HttpClient) { }\n\n  getCovidCounts(): Observable<ICovidCounts[]> {\n    return this.http.get<ICovidCounts[]>('/api/getCovidCounts.php')\n      .pipe(\n        map(response => response)\n      );\n  }\n}\n","module.exports = \".svg {\\r\\n    width: 50%;\\r\\n    height: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGVyZWsvZGVyZWsuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvZGVyZWsvZGVyZWsuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdmcge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { IDerekslinks } from './derek';\nimport { DerekService } from './derek.service';\n\n@Component({\n  selector: 'app-derek',\n  templateUrl: './derek.component.html',\n  styleUrls: ['./derek.component.css']\n})\nexport class DerekComponent implements OnInit {\n  dereksLinks: IDerekslinks[] = [];\n  constructor(private derekService: DerekService) { }\n\n  ngOnInit() {\n    this.getLinks();\n  }\n\n  getLinks() {\n    this.derekService.getLinks()\n      .subscribe(response => this.dereksLinks = response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IDerekslinks } from './derek';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class DerekService {\n\n  constructor(private http: HttpClient) { }\n\n  getLinks(): Observable<IDerekslinks[]> {\n    return this.http.get<IDerekslinks[]>('assets/data/derekslinks.json')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getLinks', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2R1bmtpbi9kdW5raW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Dunkin } from './dunkin';\nimport { DunkinService } from './dunkin.service';\nimport { StateService } from '../shared/state.service';\nimport { IState } from '../shared/state';\n\n@Component({\n  selector: 'app-dunkin',\n  templateUrl: './dunkin.component.html',\n  styleUrls: ['./dunkin.component.css']\n})\nexport class DunkinComponent implements OnInit {\n  dunkins: Dunkin[];\n  states: IState[] = [];\n\n  constructor(private dunkinService: DunkinService, private stateService: StateService) { }\n\n  ngOnInit() {\n    this.getStates();\n  }\n\n  getStates() {\n    this.stateService.getStates()\n      .subscribe(response => this.states = response);\n  }\n\n  getDunkinByState(state: string): void {\n    this.dunkinService.getDunkinByState(state)\n      .subscribe(dunkin => this.dunkins = dunkin);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Dunkin } from './dunkin';\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class DunkinService {\n\n  constructor(private http: HttpClient) { }\n  getDunkin(): Observable<Dunkin[]> {\n    return this.http.get<Dunkin[]>('api/dunkin')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getDunkin', []))\n      );\n  }\n  getDunkinByState(state: string): Observable<Dunkin[]> {\n    return this.http.get<Dunkin[]>('api/dunkin/byState?state=' + state)\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getDunkin', []))\n      );\n  }\n  getDunkinNearGeo(latitude: string, longitude: string): Observable<Dunkin[]> {\n    return this.http.get<Dunkin[]>('api/getDunkinDonutLocations.php?lat=' + latitude + \"&long=\" + longitude)\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getDunkin', []))\n      );\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpYnJhcnkvbGlicmFyeS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-library',\n  templateUrl: './library.component.html',\n  styleUrls: ['./library.component.css']\n})\nexport class LibraryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpbmRzZXkvbGluZHNleS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-lindsey',\n  templateUrl: './lindsey.component.html',\n  styleUrls: ['./lindsey.component.css']\n})\nexport class LindseyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvcmkvbG9yaS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ILorislinks } from './lori';\nimport { LoriService } from './lori.service';\n\n@Component({\n  selector: 'app-lori',\n  templateUrl: './lori.component.html',\n  styleUrls: ['./lori.component.css']\n})\nexport class LoriComponent implements OnInit {\n  lorisLinks: ILorislinks[] = [];\n  constructor(private loriService: LoriService) { }\n\n  ngOnInit() {\n    this.getLinks();\n  }\n\n  getLinks() {\n    this.loriService.getLinks()\n      .subscribe(response => this.lorisLinks = response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ILorislinks } from './lori';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoriService {\n\n  constructor(private http: HttpClient) { }\n\n  getLinks(): Observable<ILorislinks[]> {\n    return this.http.get<ILorislinks[]>('assets/data/lorislinks.json')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getLinks', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcnZlbC9tYXJ2ZWwuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ISeries, ICharacter, ICharacterById } from './marvel';\nimport { MarvelService } from './marvel.service';\n@Component({\n  selector: 'app-marvel',\n  templateUrl: './marvel.component.html',\n  styleUrls: ['./marvel.component.css']\n})\nexport class MarvelComponent implements OnInit {\n  series: ISeries[] = [];\n  characters: ICharacter[] = [];\n  characterById: ICharacterById[] = [];\n  constructor(private marvelService: MarvelService) { }\n\n  ngOnInit() {\n    this.getCharacters();\n  }\n\n  getCharacters() {\n    this.marvelService.getCharacters()\n      .subscribe(response => this.characters = response);\n  }\n  getCharacterById(id: number) {\n    this.marvelService.getCharacterById(id)\n      .subscribe(response => this.characterById = response)\n  }\n  getSeries() {\n    this.marvelService.getSeries()\n      .subscribe(response => this.series = response);\n  }\n  getDetails(serie: ISeries) {\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ISeries, ICharacter, ICharacterById } from './marvel';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarvelService {\n  baseUrl: string = \"https://gateway.marvel.com:443/v1/public/\";\n  apiKey: string = \"1acc0272c26b58f06f418cf285aaf60c\";\n\n  constructor(private http: HttpClient) { }\n\n  getCharacters(): Observable<ICharacter[]> {\n    return this.http.get<ICharacter[]>('assets/data/superHeroes.json')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getCharacters', []))\n      );\n  }\n  getCharacterById(id: number): Observable<ICharacterById[]> {\n    return this.http.get<ICharacterById[]>(this.baseUrl + \"characters/\" + id + \"?apikey=\" + this.apiKey)\n      .pipe(\n        tap(response => console.log(response)),\n        map(response => response['data']),\n        map(response => response['results']),\n        catchError(this.handleError('getCharacterById', []))\n      );\n  }\n  getSeries(): Observable<ISeries[]> {\n    return this.http.get<ISeries[]>(this.baseUrl + \"series?apikey=\" + this.apiKey)\n      .pipe(\n        tap(response => console.log(response)),\n        map(response => response['data']),\n        map(response => response['results']),\n        catchError(this.handleError('getSeries', []))\n      );\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \".flag {\\n    width: 200px;\\n    height: 200px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbnBzL25wcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9ucHMvbnBzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmxhZyB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { NpsService } from './nps.service';\nimport { StateService } from '../shared/state.service';\nimport { IPark } from './nps';\nimport { IState } from '../shared/state';\n@Component({\n  selector: 'app-nps',\n  templateUrl: './nps.component.html',\n  styleUrls: ['./nps.component.css']\n})\nexport class NpsComponent implements OnInit {\n  parks: IPark[] = [];\n  states: IState[] = [];\n\n  constructor(private npsService: NpsService, private stateService: StateService) { }\n\n  ngOnInit() {\n    this.getStates();\n  }\n\n  getParks(stateCode: string) {\n    this.npsService.getParks(stateCode)\n      .subscribe(response => this.parks = response);\n  }\n\n  getStates() {\n    this.stateService.getStates()\n      .subscribe(response => this.states = response);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IPark } from './nps';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class NpsService {\n  baseUrl: string = \"https://developer.nps.gov/api/v1/parks?fields=images&limit=50&api_key=8sBuYXBQNGxwSU3ER3S6Xjd4Ys3COHuINh3KX9hn\";\n  constructor(private http: HttpClient) { }\n\n  getParks(stateCode: string): Observable<IPark[]> {\n    return this.http.get<IPark[]>(this.baseUrl + \"&stateCode=\" + stateCode)\n      .pipe(\n        map(response => response['data']),\n        catchError(this.handleError('getParks', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BlcmZvcm1hbmNlL3BlcmZvcm1hbmNlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ITiming, IIndustry } from './performance';\nimport { PerformanceService } from './performance.service';\n\n@Component({\n  selector: 'app-performance',\n  templateUrl: './performance.component.html',\n  styleUrls: ['./performance.component.css']\n})\nexport class PerformanceComponent implements OnInit {\n  timings: ITiming[] = [];\n  industries: IIndustry[] = [];\n  constructor(private performanceService: PerformanceService) { }\n\n  ngOnInit() {\n    this.getIndustries();\n  }\n\n  getTimingsByIndustryCode(industryId: number) {\n    this.performanceService.getTimingsByIndustryId(industryId)\n      .subscribe(response => this.timings = response);\n  }\n  getIndustries() {\n    this.performanceService.getIndustries()\n      .subscribe(response => this.industries = response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ITiming, IIndustry } from './performance';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class PerformanceService {\n\n  constructor(private http: HttpClient) { }\n\n  getTimingsByIndustryId(industryId: number): Observable<ITiming[]> {\n    return this.http.get<ITiming[]>('/api/getTimingsByIndustryId.php?industryId=' + industryId)\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getTimingsByIndustryId', []))\n      );\n  }\n  getIndustries(): Observable<IIndustry[]> {\n    return this.http.get<IIndustry[]>('/api/getIndustries.php')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getIndustries', []))\n      );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \".svg {\\r\\n    width: 25%;\\r\\n    height: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGxhY2VzL3BsYWNlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9wbGFjZXMvcGxhY2VzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3ZnIHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { IPlace } from './places';\nimport { PlacesService } from './places.service';\n\n@Component({\n  selector: 'app-places',\n  templateUrl: './places.component.html',\n  styleUrls: ['./places.component.css']\n})\nexport class PlacesComponent implements OnInit {\n\n  lat: number;\n  long: number;\n  places: IPlace[] = [];\n\n  constructor(private placesService: PlacesService) {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        this.long = +pos.coords.longitude;\n        this.lat = +pos.coords.latitude;\n        this.getPlaces()\n      });\n    }\n  }\n\n  ngOnInit() { }\n\n  getPlaces() {\n    this.placesService.getPlaces(this.lat, this.long)\n      .subscribe(response => this.places = response);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IPlace } from './places';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlacesService {\n\n  constructor(private http: HttpClient) { }\n\n  getPlaces(lat: number, long: number): Observable<IPlace[]> {\n    return this.http.get<IPlace[]>('/api/getPlaces.php?lat=' + lat + '&long=' + long)\n      .pipe(\n        map(response => response)\n      );\n  }\n}\n","module.exports = \".flag {\\n    width: 200px;\\n    height: 200px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVjcmVhdGlvbi9yZWNyZWF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3JlY3JlYXRpb24vcmVjcmVhdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsYWcge1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IDIwMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { IOrganization, IRecreationalArea } from './recreation';\nimport { RecreationService } from './recreation.service';\nimport { StateService } from '../shared/state.service';\nimport { IState } from '../shared/state';\n\n@Component({\n  selector: 'app-recreation',\n  templateUrl: './recreation.component.html',\n  styleUrls: ['./recreation.component.css']\n})\nexport class RecreationComponent implements OnInit {\n\n  organizations: IOrganization[] = [];\n  recreationalAreas: IRecreationalArea[] = [];\n  states: IState[] = [];\n  constructor(private recreationService: RecreationService, private stateService: StateService) { }\n\n  ngOnInit() {\n    this.getStates();\n  }\n  getOrganizations() {\n    this.recreationService.getOrganizations()\n      .subscribe(response => this.organizations = response);\n  }\n  getRecreationalAreas(stateCode: string) {\n    this.recreationService.getRecreationalAreasByState(stateCode)\n      .subscribe(response => this.recreationalAreas = response);\n  }\n  getStates() {\n    this.stateService.getStates()\n      .subscribe(response => this.states = response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IOrganization, IRecreationalArea } from './recreation';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecreationService {\n  apiKey: string = '3C9D95801FC943DEA870FB27310E8761';\n  //http://usda.github.io/RIDB/\n  constructor(private http: HttpClient) { }\n  getOrganizations(): Observable<IOrganization[]> {\n    return this.http.get<IOrganization[]>('https://ridb.recreation.gov/api/v1/organizations/?apiKey=' + this.apiKey)\n      .pipe(\n        map(response => response['RECDATA']),\n        catchError(this.handleError('getOrganizations', []))\n      );\n  }\n  getRecreationalAreasByState(stateCode: string): Observable<IRecreationalArea[]> {\n    return this.http.get<IRecreationalArea[]>('https://ridb.recreation.gov/api/v1/recareas?state=' + stateCode + '&apiKey=' + this.apiKey)\n      .pipe(\n        map(response => response['RECDATA']),\n        catchError(this.handleError('getRecreationalAreasByState', []))\n      )\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IState } from './state';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateService {\n\n  constructor(private http: HttpClient) { }\n  getStates(): Observable<IState[]> {\n    return this.http.get<IState[]>('assets/data/states.json')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getStates', []))\n      );\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"/* .container-fluid {\\n    background-image: url('/assets/images/Emblem_of_the_United_States_Navy.svg');\\n    background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-position: center;\\n} */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hpcHMvc2hpcHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7R0FLRyIsImZpbGUiOiJzcmMvYXBwL3NoaXBzL3NoaXBzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAuY29udGFpbmVyLWZsdWlkIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy9hc3NldHMvaW1hZ2VzL0VtYmxlbV9vZl90aGVfVW5pdGVkX1N0YXRlc19OYXZ5LnN2ZycpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59ICovIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { IShip, IShipType } from './ships';\nimport { ShipsService } from './ships.service';\n\n@Component({\n  selector: 'app-ships',\n  templateUrl: './ships.component.html',\n  styleUrls: ['./ships.component.css']\n})\nexport class ShipsComponent implements OnInit {\n  ships: IShip[] = [];\n  selectedShip: IShip;\n  shipTypes: IShipType[] = [];\n  constructor(private shipsService: ShipsService) { }\n\n  ngOnInit() {\n    this.getShipTypes();\n  }\n\n  getShipTypes() {\n    this.shipsService.getShipTypes()\n      .subscribe(response => this.shipTypes = response)\n  }\n  getShipsByType(shipType: string) {\n    this.shipsService.getShipsByType(shipType)\n      .subscribe(response => this.ships = response);\n  }\n  selectShip(ship: IShip) {\n    this.selectedShip = ship;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IShip, IShipType } from './ships';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShipsService {\n\n  constructor(private http: HttpClient) { }\n\n  getShipTypes(): Observable<IShipType[]> {\n    return this.http.get<IShipType[]>('api/getShipTypes.php')\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getShipTypes', []))\n      );\n  }\n  getShipsByType(shipType: string): Observable<IShip[]> {\n    return this.http.get<IShip[]>('api/getShipsByType.php?shipType=' + shipType)\n      .pipe(\n        map(response => response),\n        catchError(this.handleError('getShipsByType', []))\n      );\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NuYXAvc25hcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snap',\n  templateUrl: './snap.component.html',\n  styleUrls: ['./snap.component.css']\n})\nexport class SnapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N3YXBpL3N3YXBpLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { IFilm, ICharacter, IPlanet, IStarship, IVehicle, ISpecies } from './swapi';\nimport { SwapiService } from './swapi.service';\n@Component({\n  selector: 'app-swapi',\n  templateUrl: './swapi.component.html',\n  styleUrls: ['./swapi.component.css']\n})\nexport class SwapiComponent implements OnInit {\n  films: IFilm[];\n  selectedFilm: IFilm;\n  characters: ICharacter[] = [];\n  selectedCharacter: ICharacter;\n  planets: IPlanet[];\n  selectedPlanet: IPlanet;\n  starShips: IStarship[];\n  selectedStarShip: IStarship;\n  vehicles: IVehicle[];\n  selectedVehicle: IVehicle;\n  species: ISpecies[];\n  selectedSpecie: ISpecies;\n  constructor(private swapiService: SwapiService) { }\n\n  ngOnInit() {\n    this.getFilms();\n  }\n\n  getFilms() {\n    this.swapiService.getFilms()\n      .subscribe(response => this.films = response.sort());\n  }\n  getDetails(episode_id: number) {\n    this.selectedFilm = this.films.find(film => film.episode_id == episode_id);\n    this.getCharacters(this.selectedFilm);\n    this.getPlanets(this.selectedFilm);\n    this.getStarships(this.selectedFilm);\n    this.getSpecies(this.selectedFilm);\n    this.getVehicles(this.selectedFilm);\n  }\n  getCharacters(film: IFilm) {\n    this.characters = [];\n    for (let entry of film.characters) {\n      this.swapiService.getCharacter(entry)\n        .subscribe(response => this.characters.push(response));\n    }\n  }\n  characterSelected(character: ICharacter) {\n    this.selectedCharacter = character;\n  }\n  getPlanets(film: IFilm) {\n    this.planets = [];\n    for (let entry of film.planets) {\n      this.swapiService.getPlanet(entry)\n        .subscribe(response => this.planets.push(response));\n    }\n  }\n  planetSelected(planet: IPlanet) {\n    this.selectedPlanet = planet;\n  }\n  getStarships(film: IFilm) {\n    this.starShips = [];\n    for (let entry of film.starships) {\n      this.swapiService.getStarship(entry)\n        .subscribe(response => this.starShips.push(response));\n    }\n  }\n  starShipSelected(starShip: IStarship) {\n    this.selectedStarShip = starShip;\n  }\n  getVehicles(film: IFilm) {\n    this.vehicles = [];\n    for (let entry of film.vehicles) {\n      this.swapiService.getVehicle(entry)\n        .subscribe(response => this.vehicles.push(response));\n    }\n  }\n  vehicleSelected(vehicle: IVehicle) {\n    this.selectedVehicle = vehicle;\n  }\n  getSpecies(film: IFilm) {\n    this.species = [];\n    for (let entry of film.species) {\n      this.swapiService.getSpecies(entry)\n        .subscribe(response => this.species.push(response));\n    }\n  }\n  specieSelected(specie: ISpecies) {\n    this.selectedSpecie = specie;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { IFilm, ICharacter, IPlanet, ISpecies, IStarship, IVehicle } from './swapi';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwapiService {\n  baseUrl = 'https://swapi.dev/api/';\n  constructor(private http: HttpClient) { }\n  getFilms(): Observable<IFilm[]> {\n    return this.http.get<IFilm[]>(this.baseUrl + 'films/')\n      .pipe(\n        //tap(response => this.log(`fetched films`)),\n        map(response => response['results']),\n        catchError(this.handleError('getFilms', []))\n      );\n  }\n  getCharacter(url: string): Observable<ICharacter> {\n    return this.http.get<ICharacter>(url);\n  }\n  getPlanet(url: string): Observable<IPlanet> {\n    return this.http.get<IPlanet>(url);\n  }\n  getSpecies(url: string): Observable<ISpecies> {\n    return this.http.get<ISpecies>(url);\n  }\n  getStarship(url: string): Observable<IStarship> {\n    return this.http.get<IStarship>(url);\n  }\n  getVehicle(url: string): Observable<IVehicle> {\n    return this.http.get<IVehicle>(url);\n  }\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      //this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}","module.exports = \".svg {\\r\\n    width: 50%;\\r\\n    height: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvd29ybGQvd29ybGQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvd29ybGQvd29ybGQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zdmcge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { ICountry, IState } from './world';\nimport { WorldService } from './world.service';\n@Component({\n  selector: 'app-world',\n  templateUrl: './world.component.html',\n  styleUrls: ['./world.component.css']\n})\nexport class WorldComponent {\n  title = 'World';\n  countries: ICountry[] = [];\n  states: IState[] = [];\n  country: ICountry;\n  constructor(private worldService: WorldService) { }\n\n  ngOnInit() {\n    this.getCountriesNestedLanguages();\n  }\n\n  getCountriesNestedLanguages() {\n    this.worldService.getCountriesNestedLanguages()\n      .subscribe(response => this.countries = response);\n  }\n\n  getStatesNestedCitiesByCountryCode(countryCode: string) {\n    this.country = this.countries.find(country => country.Code === countryCode);\n    this.worldService.getStatesNestedCitiesByCountryCode(countryCode)\n      .subscribe(response => this.states = response);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { ICountry, IState } from './world';\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorldService {\n\n  constructor(private http: HttpClient) { }\n\n  getCountriesNestedLanguages(): Observable<ICountry[]> {\n    return this.http.get<ICountry[]>('/api/getCountriesNestedLanguages.php')\n      .pipe(\n        map(response => response)\n      );\n  }\n\n  getStatesNestedCitiesByCountryCode(countryCode: string): Observable<IState[]> {\n    return this.http.get<IState[]>('/api/getStatesNestedCitiesByCountryCode.php?countryCode=' + countryCode)\n      .pipe(\n        map(response => response)\n      );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}